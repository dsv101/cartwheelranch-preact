:root {
	font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
	line-height: 1.5;
	font-weight: 400;

	color: #222;
	background-color: #ff9852;

	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-webkit-text-size-adjust: 100%;
}

#app {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	line-height: 1.5;
}

main {
	flex: auto;
	display: flex;
	align-items: center;
	max-width: 1280px;
	margin: 0 auto;
	text-align: center;
}

/* @media (max-width: 639px) {
	main {
		margin: 2rem;
	}
} */

/* @media (prefers-color-scheme: dark) {
	:root {
		color: #ccc;
		background-color: #1a1a1a;
	}
} */


/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
	opacity:0;  /* make things invisible upon start */
	-webkit-animation: fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
	-moz-animation: fadeIn ease-in 1;
	animation: fadeIn ease-in 1;

	-webkit-animation-fill-mode: forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
	-moz-animation-fill-mode: forwards;
	animation-fill-mode: forwards;

	-webkit-animation-duration: 0.5s;
	-moz-animation-duration: 0.5s;
	animation-duration: 0.5s;
}

.flex-columns {
	display: flex;
	flex-direction: column;
	gap: 24px;
}

.flex-rows {
	display: flex;
	flex-direction: row;
	gap: 24px;
}

.polaroid {
	padding: 1vw 1vw 3vw 1vw;
	background: white;
}

.pic {
	width: 25vw;
	height: 25vw;
	max-width: 300px;
	max-height: 300px;
}

h1 {
	font-size: 2rem;
	font-weight: bold;
}

h2 {
	font-size: 1.5rem;
	font-weight: bold;
}
